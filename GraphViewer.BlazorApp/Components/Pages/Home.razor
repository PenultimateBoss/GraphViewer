@page "/"
@implements IDisposable
@inject GraphConsole GConsole
@inject GraphDebugger GDebugger

@code
{
    protected override void OnInitialized()
    {
        GConsole.OnEntryChange += Rerender;
        GDebugger.Rerender += Rerender;
    }
}

<Splitter Width=@Width.Is100 Height=@Height.Is100 Direction=@SplitterDirection.Horizontal>
    <SplitterSection Width=@Width.Is50 Height=@Height.Is100 Border=@Border.Is2.Dark>
        <Div Class="w-full h-full flex flex-col p-[5px] space-y-[5px]">
            <Div Class="w-full h-[2em] flex flex-row items-center justify-center flex-none gap-[5px]">
                <Button Class="w-auto h-full aspect-square" Border=@Border.Is2.Dark Disabled=@GDebugger.Running Clicked=@OnStartClick>▶</Button>
                <Button Class="w-auto h-full aspect-square" Border=@Border.Is2.Dark Disabled=@(!GDebugger.Running) Clicked=@OnStopClick>⏹</Button>
            </Div>         
            <Addons Display=@Display.Flex Flex=@Flex.AlignItems.Center>
                <AddonLabel TextColor=@TextColor.Black50>ReverseOrder</AddonLabel>
                <Addon AddonType=@AddonType.Body>
                    <Check Class="flex-none" TValue="bool" @bind-Checked=@ReverseOrder />
                </Addon>
            </Addons>
            <Addons Display=@Display.Flex Flex=@Flex.AlignItems.Center Border=@Border.Is1.Rounded.Dark>
                <AddonLabel TextColor=@TextColor.Black50>StepTime(sec / 2)</AddonLabel>
                <Addon AddonType=@AddonType.Body>
                    <NumericEdit TValue="int" Min=@(1) @bind-Value=@GDebugger.StepTime />
                </Addon>
            </Addons>
            <Div Class="w-full h-auto grow p-[2px] flex flex-col" Border=@Border.Rounded.Is2.Dark>
                @foreach(string str in GConsole.Entry.Split(Environment.NewLine))
                {
                    <Div Class="w-full h-auto">@str</Div>
                }
            </Div>
        </Div>
    </SplitterSection>
    <SplitterSection Width=@Width.Is50 Height=@Height.Is100 Border=@Border.Is2.Dark Position=@Position.Relative>
        <GraphCanvas @ref=@GraphCanvas />
    </SplitterSection>
</Splitter>

@code
{
    private GraphCanvas GraphCanvas { get; set; } = null!;
    private bool ReverseOrder { get; set; } = false;

    private void Rerender()
    {
        InvokeAsync(StateHasChanged);        
    }
    private async void OnStartClick()
    {
        await GDebugger.RunAsync(GraphCanvas.BlazorDiagram, ReverseOrder);
    }
    private void OnStopClick()
    {
        GDebugger.Stop(GraphCanvas.BlazorDiagram);
    }

    public void Dispose()
    {
        GConsole.OnEntryChange -= Rerender;
        GDebugger.Rerender -= Rerender;
    }
}