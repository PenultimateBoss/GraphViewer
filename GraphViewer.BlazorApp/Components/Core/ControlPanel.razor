@implements IDisposable
@inject ControlConsole CConsole

@code
{
    protected override void OnInitialized()
    {
        CConsole.EntryChanged += Render;
    }
    protected override void OnAfterRender(bool first_render)
    {
        if(first_render is true)
        {
            CConsole.WriteLine("Hello");
            CConsole.WriteLine("World");
        }
    }
}

<div class="ControlPanel">
    <div class="Controls">

    </div>
    <div class="Console" tabindex="0">
        @foreach(string str in CConsole.ConsoleEntry.Split(Environment.NewLine))
        {
            <div>@str</div>
        }
    </div>
</div>

@code
{
    #region Instance
    private void Render()
    {
        InvokeAsync(StateHasChanged);
    }
    #endregion

    #region IDisposable
    public void Dispose()
    {
        CConsole.EntryChanged -= Render;
    }
    #endregion
}